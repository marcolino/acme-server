TODO:
- tradurre le notifiche e i messaggi logger - NO
- rivedere /api/user/updateUserProperty (e successive) come /api/user/updateUser - NO
- cambiare nomi controllers: controllers/articles.controllers.js => controllers/articles.js - NO

- gestire le traduzioni delle risposte (in base a "accept-language") - OK
- res.status().send -> res.status().json - OK
- cambiare "we" in una forma impersonale - OK
- usare req.t("text") per tutti i testi - OK
- tradurre tutto in locales/ (cercando le stringhe vuote, "") - OK
- nella registrazione, in caso di email già presente, controllare se non è verificato, e comunicarlo all'utente - OK
- implementare TTL per le collezioni mongodb con scadenza - OK
- impostare tests con chai - OK
- logger, accesso utente: no data ma email nel soggetto - OK
- in test/controllers/user.test.js, test updatePlan e updateRoles - OK
- tradurre anche middlewares, helpers - OK
- rimuovere i console.* (a parte i console.errors nel logger controller setup) - OK
- add logger.error in tutte le catch - OK
- usare sempre req.parameters e non req.body o req.query - OK
- risolvere la confusione x-access-token / x-auth-token - OK
- usare Authentication Bearer insted of x-auth-toksn (on client too) - OK
- invece di module.exports = { ... } nei moduli, usare exports individuali - OK
- verificare che ./public/badges serva (usato in coverage) - OK
- attivare repository git - OK

- gestire invio email con smtp di gmail (account: sistemisolari@gmail.com)
- sendemail FROM
- ripulire tutto il codice dalle parti commentate (disabilitate)
- implementare invio email html ad una lista di utenti
- verificare se esiste un tool per trovare parti di codice non utilizzato, ed eliminarle
- verificare che dynamicStringsForTranslation funzioni e sia aggiornato
- verificare che ./public/images serva
- completare il coverage dei tests
- usare jwt sia per access che refresh tokens (?)
- aggiungere "Please contact support at {{email}}" ai messaggi di errore bloccanti
- completare e pulire il file README.md, e pulire NOTES
- nei controllers, uniformare catch return 500 + json + err.message
- gestire il downgrade del piano: chiedere conferma, e specificare che non ci saranno rimborsi
- testare sempre le interazioni col database (i.e.: user.save(err => { ...}))
- aggiungere `next(err); // pass the error to the error handling middleware` alle catch di tutte le routes (come in signup)

NEWFEATURE:
- decidere come gestire le notifiche in produzione (acquistare un piano su papertrail.com?)
- rimuovere gli account non confermati, periodicamente (?)
- aggiungere l'anno di riferimento ai prodotti stripe
