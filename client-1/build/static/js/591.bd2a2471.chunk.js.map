{"version":3,"file":"static/js/591.bd2a2471.chunk.js","mappings":"gVAGO,MAAMA,EAAaA,CAACC,EAAOC,IACzB,IAAMD,EAAME,QAAQ,KAAM,IAAIA,QAAQ,OAAOF,IAAU,IAAMG,KAAKC,IAAI,IAAKD,KAAKE,IAAI,EAAGC,SAASN,EAAO,IAAMC,IAASM,SAAS,KAAKC,QAAQ,K,wBCQrJ,MAAMC,EAAYC,EAAAA,MAAYC,IAC5B,MAuBMC,GADYC,EAAAA,EAAAA,IAAYC,IAtBV,CAClBC,eAAgB,CACdC,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,YAAa,GACbC,YAAa,EACbC,YAAa,GACbC,aAAc,GACdC,YAAa,qBAEfC,aAAc,CACZR,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,WAAY,EACZC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdG,WAAY,wBAIAC,GAEhB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,GAAIlB,EAAMkB,GACVC,KAAMnB,EAAMmB,KACZC,MAAOpB,EAAMoB,MACbC,SAAUrB,EAAMqB,SAChBC,UAAWtB,EAAMsB,UACjBC,aAAcvB,EAAMuB,aAAa3B,WACjC4B,QAASxB,EAAMwB,QACfC,UAAWzB,EAAMyB,UACjBC,MAAO1B,EAAM0B,MACbC,KAAM3B,EAAM2B,KACZC,OAAQ5B,EAAM4B,OACdC,UAAW7B,EAAM6B,UAAY7B,EAAM6B,UAAY5B,EAAQ6B,UACvDC,YAAa/B,EAAM+B,YACnBC,SAAUC,GAAKjC,EAAMgC,SAASC,EAAEC,OAAOd,OACvCe,SAAUnC,EAAMmC,SAChBC,QAAQC,EAAAA,EAAAA,IAAcrC,EAAMoC,OAC5BE,WAAY,CACVlC,eAAgBJ,EAAMuC,oBACpBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAMyC,oBAAsBzC,EAAMyC,oBAAsBxC,EAAQG,eAC3EsC,SAAS,QAAOC,SAEf3C,EAAMuC,sBAENvB,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,IACL/B,aAAcb,EAAM6C,kBAClB7B,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAM8C,kBAAoB9C,EAAM8C,kBAAoB7C,EAAQY,aACvE6B,SAAS,MAAKC,SAEb3C,EAAM6C,oBAEN7B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,IACLf,UAAW5B,EAAQ8C,UAEjB/C,GACJ,IAcNF,EAAUkD,aAAe,CACvB7B,KAAM,OACNE,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,QAAS,WACTC,WAAW,EACXC,MAAO,GACPC,KAAM,QACNC,OAAQ,QACRC,UAAW,KACXE,YAAa,GACbU,oBAAqB,KACrBK,kBAAmB,KACnBX,UAAU,EACVC,MAAO,IAIT,MAAMa,EAAiBlD,EAAAA,MAAYC,IACjC,MAuBMC,GADYC,EAAAA,EAAAA,IAAYC,IAtBV,CAClBC,eAAgB,CACdC,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,YAAa,GACbC,YAAa,EACbC,YAAa,GACbC,aAAc,GACdC,YAAa,qBAEfC,aAAc,CACZR,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,WAAY,EACZC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdG,WAAY,wBAIAC,GAgBhB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRiC,UAhBmBC,MACD,CAAC,YAAa,SAAU,SAAU,QAAS,MAAO,YAAa,cAGnEC,SAASD,EAAME,OAAQ,UAAUC,KAAKH,EAAME,QAKxDF,EAAMI,kBACC,GAQTrC,GAAIlB,EAAMkB,GACVC,KAAMnB,EAAMmB,KACZC,MAAOpB,EAAMoB,MACbC,SAAUrB,EAAMqB,SAChBC,UAAWtB,EAAMsB,UACjBC,aAAcvB,EAAMuB,aAAa3B,WACjC4B,QAASxB,EAAMwB,QACfC,UAAWzB,EAAMyB,UACjBC,MAAO1B,EAAM0B,MACbC,KAAM3B,EAAM2B,KACZC,OAAQ5B,EAAM4B,OACdC,UAAW7B,EAAM6B,UAAY7B,EAAM6B,UAAY5B,EAAQ6B,UACvDC,YAAa/B,EAAM+B,YACnBC,SAAUC,GAAKjC,EAAMgC,SAASC,EAAEC,OAAOd,OACvCe,SAAUnC,EAAMmC,SAChBC,QAAQC,EAAAA,EAAAA,IAAcrC,EAAMoC,OAC5BE,WAAY,CACVlC,eAAgBJ,EAAMuC,oBACpBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAMyC,oBAAsBzC,EAAMyC,oBAAsBxC,EAAQG,eAC3EsC,SAAS,QAAOC,SAEf3C,EAAMuC,sBAENvB,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,IACL/B,aAAcb,EAAM6C,kBAClB7B,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAM8C,kBAAoB9C,EAAM8C,kBAAoB7C,EAAQY,aACvE6B,SAAS,MAAKC,SAEb3C,EAAM6C,oBAEN7B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,IACLf,UAAW5B,EAAQ8C,MACnBS,eAAgBC,IAChBC,WAAY,CACVC,SAAU,KACVC,YAAa,CACX,EAAK,QACL,IAAK,MACL,IAAK,UAKP5D,GACJ,IAcNiD,EAAeD,aAAe,CAC5B7B,KAAM,OACNE,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,QAAS,WACTC,WAAW,EACXC,MAAO,GACPC,KAAM,QACNC,OAAQ,QACRC,UAAW,KACXE,YAAa,GACbU,oBAAqB,KACrBK,kBAAmB,KACnBX,UAAU,EACVC,MAAO,IAIT,MAAMyB,EAAa9D,EAAAA,MAAYC,IAC7B,MAgCMC,GADYC,EAAAA,EAAAA,IAAYC,GA/BfA,KAAK,CAClB2D,WAAY,CACV,qBAAsB,CACpBzD,gBAAiBF,EAAM4D,QAAQC,KAAK3D,kBAGxCD,eAAgB,CACdC,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,YAAa,GACbC,YAAa,EACbC,YAAa,GACbC,aAAc,GACdC,YAAa,qBAEfC,aAAc,CACZR,gBAAiB,UACjBC,OAAQ,SACRC,UAAW,OACXC,WAAY,EACZC,aAAc,GACdC,YAAa,GACbC,aAAc,GACdG,WAAY,qBAEdmD,eAAgB,CACdC,UAAW,EACXC,aAAc,KAGuBC,CAAOjE,IAChCY,GAEhB,OACEC,EAAAA,EAAAA,KAACqD,EAAAA,EAAM,CACLnD,GAAIlB,EAAMkB,GACVC,KAAMnB,EAAMmB,KACZC,MAAOpB,EAAMoB,MACbC,SAAUrB,EAAMqB,SAChBC,UAAWtB,EAAMsB,UACjBC,aAAcvB,EAAMuB,aAAa3B,WACjC4B,QAASxB,EAAMwB,QACfC,UAAWzB,EAAMyB,UACjBC,MAAO1B,EAAM0B,MACbC,KAAM3B,EAAM2B,KACZC,OAAQ5B,EAAM4B,OACdC,UAAW7B,EAAM6B,UAAY7B,EAAM6B,UAAY,CAAE5B,EAAQgE,eAAgBhE,EAAQqE,aACjFtC,SAAUC,GAAKjC,EAAMgC,SAASC,EAAEC,OAAOd,OACvCe,SAAUnC,EAAMmC,SAChBC,QAAQC,EAAAA,EAAAA,IAAcrC,EAAMoC,OAC5BW,OACE/B,EAAAA,EAAAA,KAACuD,EAAAA,EAAa,CACZnE,eAAgBJ,EAAMuC,oBACpBvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAMyC,oBAAsBzC,EAAMyC,oBAAsBxC,EAAQG,eAC3EsC,SAAS,QAAOC,SAEf3C,EAAMuC,sBAENvB,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,IACL/B,aAAcb,EAAM6C,kBAClB7B,EAAAA,EAAAA,KAACwB,EAAAA,EAAc,CACbX,UAAW7B,EAAM8C,kBAAoB9C,EAAM8C,kBAAoB7C,EAAQY,aACvE6B,SAAS,MAAKC,SAEb3C,EAAM6C,oBAEN7B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,MAMTc,WAAY,CACV7B,UAAW5B,EAAQ6D,YAErBU,SAAUxE,EAAMwE,SAChBC,YAAcC,IACZ1D,EAAAA,EAAAA,KAAA,OAAK2D,MAAO,CAAEC,QAAS,OAAQC,SAAU,QAASlC,SAC/C3C,EAAMwE,SAAWE,EAASI,KAAI,CAAC1D,EAAO2D,KACrCC,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAE/C,OAAQ,GAAIe,SAAA,CAAcvB,EAAQ2D,EAAQL,EAASO,OAAS,EAAK,KAAO,KAAtDF,MAEhC/D,EAAAA,EAAAA,KAAA,OAAK2D,MAAO,CAAE/C,OAAQ,GAAIe,SAAE+B,SAI9B1E,EAAK2C,SAER3C,EAAMkF,QAAQJ,KAAKK,IAClBnE,EAAAA,EAAAA,KAACoE,EAAAA,EAAQ,CAAchE,MAAO+D,EAAQR,MAAO,CAAET,UAAW,EAAGC,aAAc,GACzElE,QAAS,CAAEyE,SAAUzE,EAAQyE,UAAW/B,SAEvCwC,GAHYA,MAMV,IAcbtB,EAAWb,aAAe,CACxB7B,KAAM,OACNE,UAAU,EACVC,WAAW,EACXC,cAAc,EACdC,QAAS,WACTC,WAAW,EACXC,MAAO,GACPC,KAAM,QACNC,OAAQ,QACRC,UAAW,KACXE,YAAa,GACbU,oBAAqB,KACrBK,kBAAmB,KACnBX,UAAU,EACVC,MAAO,IAyGT,MAAMiD,EAAatF,EAAAA,MAAYC,IAC7B,MA4CMC,GADYC,EAAAA,EAAAA,IAAYC,GA3CfA,KAAK,CAClBmF,OAAQ,CACN1D,OAAQzB,EAAMoF,QAAQ,EAAG,EAAG,EAAG,GAC/BC,cAAe,OACfC,SAAU,QACVpG,MAAO,OACPgB,gBAAiBF,EAAM4D,QAAQ2B,QAAQC,KACvC,UAAW,CACTtF,gBAAiBjB,EAAWe,EAAM4D,QAAQ2B,QAAQC,MAAO,KAE3DC,QAAQ,GAEVC,gBAAiB,CACfjE,OAAQzB,EAAMoF,QAAQ,EAAG,EAAG,EAAG,GAC/BC,cAAe,OACfC,SAAU,iBACVpG,MAAO,OACPgB,gBAAiBF,EAAM4D,QAAQ+B,UAAUC,KAAO,cAChD,UAAW,CACT1F,gBAAiBjB,EAAWe,EAAM4D,QAAQ+B,UAAUC,MAAO,IAAO,eAEpEH,QAAQ,GAEVI,gBAAiB,CACfpE,OAAQzB,EAAMoF,QAAQ,EAAG,EAAG,EAAG,GAC/BU,eAAgB,aAChBvF,YAAaP,EAAMoF,QAAQ,GAC3BE,SAAU,SAEZS,wBAAyB,CACvB7F,gBAAiBF,EAAM4D,QAAQoC,cAAcC,SAAS/F,gBACtD,UAAW,CACTA,gBAAiBjB,EAAWe,EAAM4D,QAAQoC,cAAcC,SAAS/F,iBAAkB,MAGvFgG,sBAAuB,CACrBhG,gBAAiBF,EAAM4D,QAAQoC,cAAcG,OAAOjG,gBACpD,UAAW,CACTA,gBAAiBjB,EAAWe,EAAM4D,QAAQoC,cAAcG,OAAOjG,iBAAkB,QAK9C+D,CAAOjE,IAChCY,GAEhB,OACEC,EAAAA,EAAAA,KAACuF,EAAAA,EAAM,CACL9E,UAAWzB,EAAMyB,UACjBD,QAASxB,EAAMwB,QACfnC,MAAOW,EAAMX,MACbsC,KAAM3B,EAAM2B,KACZE,UAAW,GAAG5B,EAAQqF,UAAUtF,EAAMwG,OAASvG,EAAQ+F,gBAAkB,MAAMhG,EAAMwG,OAASvG,EAAQ,mBAAoBwG,EAAAA,EAAAA,IAAWzG,EAAMwG,SAAW,MAAMvG,EAAQD,EAAM6B,aAC1K6E,UAAW1G,EAAM0G,UACjBC,QAAS3G,EAAM2G,QACfxE,SAAUnC,EAAMmC,YACZnC,EAAK2C,SAER3C,EAAM2C,UACA,IAWb0C,EAAWrC,aAAe,CACxBvB,WAAW,EACXD,QAAS,YACTnC,MAAO,UACPmH,OAAQ,MAIWzG,EAAAA,MAAYC,IAC/B,MAUMC,GADYC,EAAAA,EAAAA,IAAYC,IATV,CAClBgC,SAAU,CACR9C,MAAO,OACPuH,OAAQ,UACR,UAAW,CACTC,eAAgB,YAKN9F,GAEV+F,EAAoB9G,EAAMmC,SAAWlC,EAAQkC,SAAW,GAE9D,OACEnB,EAAAA,EAAAA,KAAC+F,EAAAA,EAAgB,CACfC,SACEhG,EAAAA,EAAAA,KAACiG,EAAAA,EAAQ,CACPC,QAASlH,EAAMkH,QACflF,SAAWC,GAAMjC,EAAMgC,SAASC,EAAEC,OAAOgF,SACzCrF,UAAW,GAAG7B,EAAM6B,aAAaiF,IACjCzH,MAAOW,EAAMX,MACbsC,KAAM3B,EAAM2B,KACZQ,SAAUnC,EAAMmC,YACZnC,IAGR0B,OACEV,EAAAA,EAAAA,KAACmG,EAAQ,CACPtF,UAAW,GAAG7B,EAAM6B,aAAaiF,IAAoBnE,SAEpD3C,EAAM2C,YAGX,IAOOK,aAAe,CAC1BkE,SAAS,EACT7H,MAAO,UACPsC,KAAM,SAIR,MAAMwF,EAAWpH,EAAAA,MAAYC,IAEzBgB,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CACTC,UAAWrH,EAAMqH,UACjB7F,QAASxB,EAAMwB,QACfnC,MAAOW,EAAMX,MACbiI,MAAOtH,EAAMsH,SACTtH,EAAK2C,SAER3C,EAAM2C,aAQbwE,EAASnE,aAAe,CACtBqE,UAAW,KACX7F,QAAS,QACTnC,MAAO,eAIT,MAAMkI,EAAWxH,EAAAA,MAAYC,IAC3B,MAcMC,GADYC,EAAAA,EAAAA,IAAYC,IAbV,CAClBqH,OAAQ,CACNZ,OAAQ,WAEVzE,SAAU,CACR9C,MAAO,OACPuH,OAAQ,UACR,UAAW,CACTC,eAAgB,OAChBxH,MAAO,YAKG0B,GAEVc,EAAY7B,EAAMmC,SAAWlC,EAAQkC,SAAWlC,EAAQuH,OAE9D,OACExG,EAAAA,EAAAA,KAACyG,EAAAA,EAAI,CACHC,KAAM1H,EAAM0H,KAEZ7F,UAAW,GAAG7B,EAAM6B,aAAaA,IACjCxC,MAAOW,EAAMX,SACTW,EAAK2C,SAER3C,EAAM2C,UACF,IAOX4E,EAASvE,aAAe,CACtB3D,MAAO,eAIT,MAAMsI,EAAsB5H,EAAAA,MAAYC,IACtC,MAkBMC,GADYC,EAAAA,EAAAA,IAAYC,GAjBfA,KAAK,CAClByH,UAAW,CACThD,QAAS,OACTiD,WAAY,SACZ3D,UAAW/D,EAAMoF,QAAQvF,EAAMiE,gBAC/BE,aAAchE,EAAMoF,QAAQvF,EAAMiE,iBAEpC6D,QAAS,CACPC,MAAO,OACPC,aAAc,cAAgBhI,EAAMX,MAAQW,EAAMX,MAAQc,EAAM4D,QAAQkE,QAAQlC,MAChFrF,YAAaP,EAAMoF,QAAQ,IAE7B2C,KAAM,CACJxH,YAAaP,EAAMoF,QAAQvF,EAAMmI,mBACjCxH,aAAcR,EAAMoF,QAAQvF,EAAMmI,sBAGG/D,CAAOjE,IAChCY,GAEhB,OACEiE,EAAAA,EAAAA,MAAA,OAAKnD,UAAW5B,EAAQ2H,UAAUjF,SAAA,EAChC3B,EAAAA,EAAAA,KAAA,OAAKa,UAAW5B,EAAQ6H,UACvB9H,EAAM2C,WAAY3B,EAAAA,EAAAA,KAAA,QAAMa,UAAW5B,EAAQiI,KAAKvF,SAC9C3C,EAAM2C,YAET3B,EAAAA,EAAAA,KAAA,OAAKa,UAAW5B,EAAQ6H,YACpB,IAUVH,EAAoB3E,aAAe,CACjCiB,eAAgB,EAChBkE,kBAAmB,GAIrB,MAAMC,EAAYrI,EAAAA,MAAYC,IAAW,IAADqI,EACtC,MAWMpI,GADYC,EAAAA,EAAAA,IAAYC,GAVfA,KAAK,CAClBmI,MAAO,CACLC,QAAS,EACT5H,aAAc,GACd6H,aAAc,EACdC,UAAW,QACXpJ,MAAOc,EAAM4D,QAAQuE,MAAMjJ,MAC3BgB,gBAAiBF,EAAM4D,QAAQuE,MAAMjI,mBAGA+D,CAAOjE,IAChCY,GAEhB,OACEC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAG,CAACC,GAAI,CAAExE,aAAc,IAAMtC,UAAwB,QAAfwG,EAAErI,EAAMC,eAAO,IAAAoI,EAAAA,EAAIpI,EAAQqI,MAAM3F,UACvE3B,EAAAA,EAAAA,KAACoG,EAAAA,EAAU,CAAC5F,QAAQ,KAAImB,SACrB3C,EAAM2C,UAAY3C,EAAM4I,YAEvB,IAWVR,EAAUpF,aAAe,CACvB4F,SAAU,WACV3E,eAAgB,EAChBkE,kBAAmB,E,wHCltBrB,MAAMpH,GAAYb,EAAAA,EAAAA,IAAYC,IAAK,CACjCmI,MAAO,CACLC,QAAS,EACT5H,aAAc,GACd6H,aAAc,EACdC,UAAW,QACXpJ,MAAOc,EAAM4D,QAAQuE,MAAMjJ,MAC3BgB,gBAAiBF,EAAM4D,QAAQuE,MAAMjI,qBAKnCwI,EAAiBA,KACL9H,KACA+H,EAAAA,EAAAA,MADhB,MAEM,EAAEC,IAAMC,EAAAA,EAAAA,KAEd,OACEhE,EAAAA,EAAAA,MAAApC,EAAAA,SAAA,CAAAD,SAAA,EACE3B,EAAAA,EAAAA,KAACoH,EAAAA,GAAS,CAAAzF,SACNoG,EAAE,sBAEN/D,EAAAA,EAAAA,MAACiE,EAAAA,EAAK,CAAAtG,SAAA,CACHoG,EAAE,oBAAoB,WAExB,EAIP,EAAehJ,EAAAA,KAAW8I,E","sources":["libs/Styling.js","components/FormElements.js","components/HandleArticles.js"],"sourcesContent":["/**\n * Shade a color by an amount [-100 - 100] (negative is darker, positive is ligher).\n */\nexport const shadeColor = (color, amount) => {\n  return \"#\" + color.replace(/^#/, \"\").replace(/../g, color => (\"0\" + Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)).substr(-2));\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  TextField, Button, Select, MenuItem, InputAdornment, OutlinedInput,\n  FormControlLabel, Checkbox, Link, Typography, Box,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport InputMask from \"react-input-mask\";\nimport { shadeColor } from \"../libs/Styling\";\nimport { capitalize, isEmptyObject } from \"../libs/Misc\";\n\n\nconst FormInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <TextField\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n      }}\n      {...props}\n    />\n  );\n});\n\nFormInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\nconst FormPhoneInput = React.memo((props) => {\n  const styles = theme => ({\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const handleKeyDown = (event) => { // allow only +, digits and spaces\n    const allowedKeys = [\"Backspace\", \"Delete\", \"Escape\", \"Enter\", \"Tab\", \"ArrowLeft\", \"ArrowRight\"];\n\n    // check if the key pressed is one of the allowed control keys or a digit, plus (+), or space\n    if (allowedKeys.includes(event.key) || /[0-9+ ]/.test(event.key)) {\n        // allow the input\n        return true;\n    } else {\n        // prevent the input\n        event.preventDefault();\n        return false;\n    }\n  };\n\n  return (\n    <TextField\n      onKeyDown={handleKeyDown}\n      \n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : classes.textField}\n      placeholder={props.placeholder}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      InputProps={{\n        startAdornment: props.startAdornmentIcon ? (\n          <InputAdornment\n            className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n            position=\"start\"\n          >\n            {props.startAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        endAdornment: props.endAdornmentIcon ? (\n          <InputAdornment\n            className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n            position=\"end\"\n          >\n            {props.endAdornmentIcon}\n          </InputAdornment>\n        ) : (<></>),\n        className: classes.input,\n        inputComponent: InputMask,\n        inputProps: {\n          maskChar: null,\n          formatChars: {\n            \"9\": \"[0-9]\",\n            \"+\": \"\\\\+\",\n            \" \": \" \",\n          },\n          //placeholder: \"+xx xxx xxx xxxx\",\n        },\n      }}\n      {...props}\n    />\n  );\n});\n\nFormPhoneInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormPhoneInput.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\nconst FormSelect = React.memo((props) => {\n  const styles = theme => ({\n    selectRoot: {\n      \"&.MuiSelect-select\": {\n        backgroundColor: theme.palette.base.backgroundColor, // the background when menu is closed\n      },\n    },\n    startAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: -15,\n      marginRight: 5,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderRight: \"1px solid #c5c5c5\",\n    },\n    endAdornment: {\n      backgroundColor: \"#eaedf0\",\n      height: \"2.5rem\",\n      maxHeight: \"3rem\",\n      marginLeft: 5,\n      marginRight: -15,\n      paddingLeft: 10,\n      paddingRight: 10,\n      borderLeft: \"1px solid #c5c5c5\",\n    },\n    marginVertical: {\n      marginTop: 7,\n      marginBottom: 5,\n    }\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Select\n      id={props.id}\n      type={props.type}\n      value={props.value}\n      required={props.required}\n      autoFocus={props.autoFocus}\n      autoComplete={props.autoComplete.toString()}\n      variant={props.variant}\n      fullWidth={props.fullWidth}\n      label={props.label}\n      size={props.size}\n      margin={props.margin}\n      className={props.className ? props.className : [ classes.marginVertical, classes.selectField ]}\n      onChange={e => props.onChange(e.target.value)}\n      disabled={props.disabled}\n      error={!isEmptyObject(props.error)}\n      input={\n        <OutlinedInput\n          startAdornment={props.startAdornmentIcon ? (\n            <InputAdornment\n              className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n              position=\"start\"\n            >\n              {props.startAdornmentIcon}\n            </InputAdornment>\n          ) : (<></>)}\n          endAdornment={props.endAdornmentIcon ? (\n            <InputAdornment\n              className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n              position=\"end\"\n            >\n              {props.endAdornmentIcon}\n            </InputAdornment>\n          ) : (<></>)}\n        />\n      }\n      // InputProps={{\n      //   className: classes.selectInput,\n      // }}\n      inputProps={{\n        className: classes.selectRoot,\n      }}\n      multiple={props.multiple}\n      renderValue={(selected) => (\n        <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          {props.multiple ? selected.map((value, index) => (\n            <div style={{ margin: 2 }} key={index}>{value}{(index < selected.length - 1) ? \", \" : \"\"}</div>\n          )) : (\n            <div style={{ margin: 2 }}>{selected}</div>\n          )}\n        </div>\n      )}\n      {...props}\n    >\n      {props.options.map((option) => (\n        <MenuItem key={option} value={option} style={{ marginTop: 2, marginBottom: 2 }}\n          classes={{ selected: classes.selected }}\n        >\n          {option}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n});\n\nFormSelect.propTypes = {\n  value: PropTypes.string.isRequired,\n  startAdornmentClass: PropTypes.string,\n  startAdornmentIcon: PropTypes.object,\n  endAdornmentClass: PropTypes.string,\n  endAdornmentIcon: PropTypes.object,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n};\n\nFormSelect.defaultProps = {\n  type: \"text\",\n  required: false,\n  autoFocus: false,\n  autoComplete: false,\n  variant: \"outlined\",\n  fullWidth: true,\n  label: \"\",\n  size: \"small\",\n  margin: \"dense\",\n  className: null,\n  placeholder: \"\",\n  startAdornmentClass: null,\n  endAdornmentClass: null,\n  disabled: false,\n  error: \"\",\n};\n\n\n{/* <ReactPhoneInput\nvalue={value}\ndefaultCountry={defaultCountry || \"gb\"}\nonChange={onChange}\ninputClass={classes.field}\ndropdownClass={classes.countryList}\ncomponent={TextField}\n/> */}\n// const FormPhoneInput = React.memo((props) => {\n//   const styles = theme => ({\n//     startAdornment: {\n//       backgroundColor: \"#eaedf0\",\n//       height: \"2.5rem\",\n//       maxHeight: \"3rem\",\n//       marginLeft: -15,\n//       marginRight: 5,\n//       paddingLeft: 10,\n//       paddingRight: 10,\n//       borderRight: \"1px solid #c5c5c5\",\n//     },\n//     endAdornment: {\n//       backgroundColor: \"#eaedf0\",\n//       height: \"2.5rem\",\n//       maxHeight: \"3rem\",\n//       marginLeft: 5,\n//       marginRight: -15,\n//       paddingLeft: 10,\n//       paddingRight: 10,\n//       borderLeft: \"1px solid #c5c5c5\",\n//     },\n//   });\n//   const useStyles = makeStyles((theme) => (styles(theme)));\n//   const classes = useStyles();\n\n//   return (\n//     <ReactPhoneInput\n//       value={props.value}\n//       defaultCountry={props.defaultCountry || config.i18n.country}\n//       onChange={props.onChange}\n//       inputClass={classes.field}\n//       dropdownClass={classes.countryList}\n//       component={(params => <TextField />)}\n//       // id={props.id}\n//       // value={props.value}\n//       // required={props.required}\n//       // autoFocus={props.autoFocus}\n//       // variant={props.variant}\n//       // fullWidth={props.fullWidth}\n//       // label={props.label}\n//       // size={props.size}\n//       // margin={props.margin}\n//       // className={classes.root}\n//       // placeholder={props.placeholder}\n//       // onChange={(value) => props.onChange(value)}\n//       // disabled={props.disabled}\n//       // error={!isEmptyObject(props.error)}\n//       // InputProps={{\n//       //   startAdornment: props.startAdornmentIcon ? (\n//       //     <InputAdornment\n//       //       className={props.startAdornmentClass ? props.startAdornmentClass : classes.startAdornment}\n//       //       position=\"start\"\n//       //     >\n//       //       {props.startAdornmentIcon}\n//       //     </InputAdornment>\n//       //   ) : (<></>),\n//       //   endAdornment: props.endAdornmentIcon ? (\n//       //     <InputAdornment\n//       //       className={props.endAdornmentClass ? props.endAdornmentClass : classes.endAdornment}\n//       //       position=\"end\"\n//       //     >\n//       //       {props.endAdornmentIcon}\n//       //     </InputAdornment>\n//       //   ) : (<></>),\n//       //   className: classes.input,\n//       // }}\n//     />\n//   );\n// });\n\n// FormPhoneInput.propTypes = {\n//   value: PropTypes.string.isRequired,\n//   startAdornmentIcon: PropTypes.object,\n//   endAdornmentIcon: PropTypes.object,\n//   disabled: PropTypes.bool,\n//   error: PropTypes.string,\n// };\n\n// FormPhoneInput.defaultProps = {\n//   required: false,\n//   autoFocus: false,\n//   variant: \"outlined\",\n//   fullWidth: true,\n//   label: \"\",\n//   size: \"small\",\n//   margin: \"dense\",\n//   placeholder: \"\",\n//   disabled: false,\n//   error: \"\",\n// };\n\n\nconst FormButton = React.memo((props) => {\n  const styles = theme => ({\n    button: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1.1em\",\n      color: \"#fff\", // TODO\n      backgroundColor: theme.palette.success.main,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.success.main, -25),\n      },\n      noWrap: true,\n    },\n    buttonSecondary: {\n      margin: theme.spacing(1, 0, 0, 0),\n      textTransform: \"none\",\n      fontSize: \"1em !important\",\n      color: \"#ccc\", // TODO\n      backgroundColor: theme.palette.secondary.dark + \" !important\",\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.secondary.dark, -25)  + \" !important\",\n      },\n      noWrap: true,\n    },\n    buttonFederated: {\n      margin: theme.spacing(1, 0, 0, 0),\n      justifyContent: \"flex-start\",\n      paddingLeft: theme.spacing(5),\n      fontSize: \"1.3em\",\n    },  \n    buttonFederatedFacebook: {\n      backgroundColor: theme.palette.socialButtons.facebook.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.facebook.backgroundColor, -25),\n      },\n    },\n    buttonFederatedGoogle: {\n      backgroundColor: theme.palette.socialButtons.google.backgroundColor,\n      \"&:hover\": {\n        backgroundColor: shadeColor(theme.palette.socialButtons.google.backgroundColor, -25),\n      },\n    },\n  \n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Button\n      fullWidth={props.fullWidth}\n      variant={props.variant}\n      color={props.color}\n      size={props.size}\n      className={`${classes.button} ${props.social ? classes.buttonFederated : \"\"} ${props.social ? classes[\"buttonFederated\" + capitalize(props.social)] : \"\"} ${classes[props.className]}`}\n      startIcon={props.startIcon}\n      onClick={props.onClick}\n      disabled={props.disabled}\n      {...props}\n    >\n      {props.children}\n    </Button>\n  );\n});\n\nFormButton.propTypes = {\n  social: PropTypes.oneOf([\n    \"Facebook\",\n    \"Google\",\n  ]),\n}\n\nFormButton.defaultProps = {\n  fullWidth: true,\n  variant: \"contained\",\n  color: \"primary\",\n  social: null,\n};\n\n\nconst FormCheckbox = React.memo((props) => {\n  const styles = theme => ({\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const classNameDisabled = props.disabled ? classes.disabled : \"\";\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={props.checked}\n          onChange={(e) => props.onChange(e.target.checked)}\n          className={`${props.className} ${classNameDisabled}`}\n          color={props.color}\n          size={props.size}\n          disabled={props.disabled}\n          {...props}\n        />\n      }\n      label={\n        <FormText\n          className={`${props.className} ${classNameDisabled}`}\n        >\n          {props.children}\n        </FormText>\n      }\n    />\n  );\n});\n\nFormCheckbox.propTypes = {\n};\n\nFormCheckbox.defaultProps = {\n  checked: false,\n  color: \"primary\",\n  size: \"small\",\n};\n\n\nconst FormText = React.memo((props) => {\n  return (\n    <Typography\n      component={props.component}\n      variant={props.variant}\n      color={props.color}\n      align={props.align}\n      {...props}\n    >\n      {props.children}\n    </Typography>\n  );\n});\n\nFormText.propTypes = {\n};\n\nFormText.defaultProps = {\n  component: \"h1\",\n  variant: \"body2\",\n  color: \"textPrimary\",\n};\n\n\nconst FormLink = React.memo((props) => {\n  const styles = theme => ({\n    normal: {\n      cursor: \"pointer\",\n    },\n    disabled: {\n      color: \"grey\",\n      cursor: \"default\",\n      \"&:hover\": {\n        textDecoration: \"none\",\n        color: \"grey\",\n      },\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  const className = props.disabled ? classes.disabled : classes.normal;\n\n  return (\n    <Link\n      href={props.href}\n      //onClick={() => history.push(\"/xxx\")}  //props.href)} //\"/signUp\")}\n      className={`${props.className} ${className}`}\n      color={props.color}\n      {...props}\n    >\n      {props.children}\n    </Link>\n  );\n});\n\nFormLink.propTypes = {\n};\n\nFormLink.defaultProps = {\n  color: \"textPrimary\",\n};\n\n\nconst FormDividerWithText = React.memo((props) => {\n  const styles = theme => ({\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n      marginTop: theme.spacing(props.marginVertical),\n      marginBottom: theme.spacing(props.marginVertical),\n    },\n    divider: {\n      width: \"100%\",\n      borderBottom: \"1px solid \" + (props.color ? props.color : theme.palette.primary.dark),\n      paddingLeft: theme.spacing(1),\n    },\n    text: {\n      paddingLeft: theme.spacing(props.paddingHorizontal),\n      paddingRight: theme.spacing(props.paddingHorizontal),\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.divider} />\n      {props.children && <span className={classes.text}>\n        {props.children}\n      </span>}\n      <div className={classes.divider} />\n    </div>\n  );\n});\n\nFormDividerWithText.propTypes = {\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormDividerWithText.defaultProps = {\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\n\nconst FormTitle = React.memo((props) => {\n  const styles = theme => ({\n    title: {\n      padding: 8,\n      paddingRight: 24,\n      borderRadius: 4,\n      textAlign: \"right\",\n      color: theme.palette.title.color,\n      backgroundColor: theme.palette.title.backgroundColor,\n    },\n  });\n  const useStyles = makeStyles((theme) => (styles(theme)));\n  const classes = useStyles();\n\n  return (\n    <Box sx={{ marginBottom: 24 }} className={props.classes ?? classes.title}>\n      <Typography variant=\"h6\">\n        {props.children || props.contents}\n      </Typography>\n    </Box>\n  );\n});\n\nFormTitle.propTypes = {\n  contents: PropTypes.string,\n  color: PropTypes.string,\n  marginVertical: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n  paddingHorizontal: PropTypes.oneOf([ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ]),\n};\n\nFormTitle.defaultProps = {\n  contents: \"No title\",\n  marginVertical: 1,\n  paddingHorizontal: 1,\n};\n\n\nexport {\n  FormInput, FormPhoneInput, FormSelect, FormButton, FormCheckbox,\n  FormText, FormLink, FormDividerWithText, FormTitle,\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport { makeStyles } from \"@material-ui/styles\";\n//import { toast } from \"./Toast\";\nimport { FormTitle } from \"./FormElements\";\nimport {\n  Box, Paper, Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    padding: 8,\n    paddingRight: 24,\n    borderRadius: 4,\n    textAlign: \"right\",\n    color: theme.palette.title.color,\n    backgroundColor: theme.palette.title.backgroundColor,\n  },\n}));\n\n\nconst HandleArticles = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <FormTitle>\n         {t(\"Handle articles\")}\n        </FormTitle>\n      <Paper>\n        {t(\"Work in progress\")}...\n      </Paper>\n    </>\n  );\n};\n\nexport default React.memo(HandleArticles);"],"names":["shadeColor","color","amount","replace","Math","min","max","parseInt","toString","substr","FormInput","React","props","classes","makeStyles","theme","startAdornment","backgroundColor","height","maxHeight","marginLeft","marginRight","paddingLeft","paddingRight","borderRight","endAdornment","borderLeft","useStyles","_jsx","TextField","id","type","value","required","autoFocus","autoComplete","variant","fullWidth","label","size","margin","className","textField","placeholder","onChange","e","target","disabled","error","isEmptyObject","InputProps","startAdornmentIcon","InputAdornment","startAdornmentClass","position","children","_Fragment","endAdornmentIcon","endAdornmentClass","input","defaultProps","FormPhoneInput","onKeyDown","event","includes","key","test","preventDefault","inputComponent","InputMask","inputProps","maskChar","formatChars","FormSelect","selectRoot","palette","base","marginVertical","marginTop","marginBottom","styles","Select","selectField","OutlinedInput","multiple","renderValue","selected","style","display","flexWrap","map","index","_jsxs","length","options","option","MenuItem","FormButton","button","spacing","textTransform","fontSize","success","main","noWrap","buttonSecondary","secondary","dark","buttonFederated","justifyContent","buttonFederatedFacebook","socialButtons","facebook","buttonFederatedGoogle","google","Button","social","capitalize","startIcon","onClick","cursor","textDecoration","classNameDisabled","FormControlLabel","control","Checkbox","checked","FormText","Typography","component","align","FormLink","normal","Link","href","FormDividerWithText","container","alignItems","divider","width","borderBottom","primary","text","paddingHorizontal","FormTitle","_props$classes","title","padding","borderRadius","textAlign","Box","sx","contents","HandleArticles","useHistory","t","useTranslation","Paper"],"sourceRoot":""}