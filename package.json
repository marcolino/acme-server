{
  "name": "acme",
  "version": "0.0.0",
  "description": "Web app skeleton implementation, with authentication, users handling and common web app facilities",
  "author": "marcolino",
  "license": "ISC",
  "engines": {
    "node": "18.x",
    "npm": "9.x",
    "yarn": "4.x"
  },
  "main": "server.js",
  "scripts": {
    "start-dev": "NODE_ENV=development nodemon --ignore client/ -w '.' -w server.js",
    "start-dev-reloading": "NODE_ENV=development nodemon --ignore client/ -w '.' -w .env -x 'node server.js || touch server.js'",
    "start-dev-trace-warnings": "NODE_ENV=development node --trace-warnings server.js",
    "start-staging": "NODE_ENV=staging node server.js",
    "start": "node server.js",
    "inject": "node scripts/inject.js",
    "test": "nyc --reporter=html mocha --exit --timeout 10000 --slow 150 --recursive test | tee test/log/last.log; scripts/test2badge",
    "coverage": "xdg-open http://localhost:5000/coverage/",
    "i18n-prepare": "bash -c 'for dir in $(cat ../acme-client/src/config.json | jq -r \".locales | keys[]\"); do mkdir -p \"src/locales/$dir/\"; done'",
    "i18n": "yarn i18n-prepare; i18next 'src/**/*.{js,ejs}' --config 'i18next-parser.config.js' --silent",
    "i18n-check-DO-NOT-STOP": "yarn i18n && missing=$((grep --only-matching __STRING_NOT_TRANSLATED__ src/locales/*/translation.json | wc -l)); test $missing -gt 0 && ( echo \"$missing strings have to be translated!\"; false ) || true",
    "i18n-check": "sh -c 'yarn i18n && missing=$(grep --only-matching __STRING_NOT_TRANSLATED__ src/locales/*/translation.json | wc -l); if [ $missing -gt 0 ]; then echo \"$missing strings have to be translated!\"; exit 1; fi'",
    "deps-check": "npx unimported",
    "deadfiles-check": "npx deadfile ./server.js --dir src/ --ci --exclude locales --exclude misc --exclude templates",
    "eslint-check": "eslint server.js src/",
    "check": "yarn i18n-check; yarn deps-check; yarn deadfiles-check; yarn eslint-check",
    "docker-build-dev": "docker build --build-arg NODE_ENV=development -t acmeserver:latest .",
    "docker-run-dev": "docker run --network='host' --env-file .env.dev -e NODE_ENV=development acmeserver",
    "docker-build-staging": "docker build --build-arg NODE_ENV=staging -t acmeserver:latest .",
    "docker-run-staging": "docker run --network='host' --env-file .env -e NODE_ENV=staging acmeserver",
    "docker-build": "docker build --build-arg NODE_ENV=production -t acmeserver:latest .",
    "docker-run": "# no sense to use production server url, use always localhost:5000 as server url! - docker run --network='host' --env-file .env -e NODE_ENV=production acmeserver",
    "fly-create-volume": "fly volume create products -r cdg -y",
    "fly-upgrade": "fly version upgrade",
    "fly-import-secrets": "cat .env | fly secrets import",
    "fly-deploy": "NODE_ENV=$(grep NODE_ENV .env | cut -d '=' -f2) echo $NODE_ENV && fly deploy",
    "fly-logs": "fly logs",
    "fly": "yarn fly-upgrade && yarn fly-import-secrets && yarn i18n-check && yarn docker-build && yarn fly-deploy",
    "pub": "(cd ../acme-client/ && yarn build ) && yarn fly && yarn sound-ok",
    "sound-ok": "spd-say -p 100 'successo!' 2> /dev/null",
    "sound-ko": "spd-say -p 45 'errore!' 2> /dev/null"
  },
  "keywords": [
    "node.js",
    "react.js",
    "express",
    "jwt",
    "authentication",
    "authorization",
    "mongodb"
  ],
  "dependencies": {
    "@css-inline/css-inline": "^0.14.3",
    "@logtail/node": "^0.5.2",
    "@logtail/winston": "^0.5.2",
    "axios": "^1.7.7",
    "bcryptjs": "^2.4.3",
    "codice-fiscale-js": "^2.3.18",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.0.1",
    "ejs": "^3.1.10",
    "email-validator": "^2.0.4",
    "express": "^4.17.1",
    "express-async-errors": "^3.1.1",
    "express-session": "^1.18.0",
    "helmet": "^7.1.0",
    "html-entities": "^2.5.2",
    "i18next": "^22.4.14",
    "i18next-fs-backend": "^2.3.2",
    "i18next-http-middleware": "^3.2.2",
    "jsonwebtoken": "^8.5.1",
    "memorystore": "^1.6.7",
    "mongoose": "^5.13.15",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "passport": "^0.7.0",
    "passport-facebook": "^3.0.0",
    "passport-google-oauth20": "^2.0.0",
    "sharp": "^0.33.5",
    "sib-api-v3-sdk": "^8.5.0",
    "stripe": "^8.214.0",
    "uuid": "^11.0.3",
    "winston": "^3.7.2",
    "winston-syslog": "^2.5.0"
  },
  "devDependencies": {
    "chai": "^4.3.6",
    "chai-http": "^4.3.0",
    "chai-spies": "^1.0.0",
    "eslint": "^9.16.0",
    "globals": "^15.13.0",
    "i18next-parser": "9.0.2",
    "mocha": "^9.2.2",
    "nodemon": "^2.0.15",
    "nyc": "^15.1.0"
  },
  "packageManager": "yarn@4.5.0",
  "dependenciesMetadata": {
    "unplugged": []
  }
}
