{
  "name": "acme",
  "version": "0.0.1",
  "description": "Web app skeleton implementation, with authentication, users handling and common web app facilities",
  "author": "marcolino",
  "license": "ISC",
  "engines": {
    "node": "18.x",
    "npm": "9.x",
    "yarn": "3.x"
  },
  "main": "server.js",
  "scripts": {
    "start-dev": "nodemon --ignore client/ -w '.' -w server.js",
    "start-dev-reloaded": "nodemon --ignore client/ -w '.' -w .env -x 'node server.js || touch server.js'",
    "start": "node server.js",
    "test_with_nyc_BROKEN": "nyc --reporter=html unbuffer mocha --exit --timeout 10000 --slow 150 --recursive test | tee test/log/last.log",
    "test": "mocha --exit --timeout 10000 --slow 150 --recursive test | tee test/log/last.log",
    "posttest": "scripts/test2badge",
    "test-debug": "mocha --exit --timeout 10000 --slow 150 --debug --recursive test",
    "test-nocoverage": "unbuffer mocha --exit --timeout 10000 --slow 150 --recursive test | tee test/log/last.log",
    "testwatch": "nodemon --exec \"mocha --recursive --timeout 10000 --slow 150\"",
    "_prepub": "yarn test",
    "_pub": "git add . && git commit -m \"$CM\" && git push && yarn push",
    "_pub-dev": "yarn pub && yarn logs",
    "_push": "git push heroku master",
    "i18n": "i18next 'src/**/*.{js,ejs}' --config 'i18next-parser.config.js' --silent",
    "i18n-pre-check": "grep __STRING_NOT_TRANSLATED__ --quiet src/locales/*/translation.json && echo 'Some texts must be translated!'",
    "_i18n-check": "i18next 'src/**/*.{js,ejs}' --config 'i18next-parser.config.js' --silent --output /tmp/i18n-check-$$.json && cmp --silent /tmp/i18n-check-$$.json src/locales/en/translation.json; test $? = '1' && echo 'Some new texts must be translated!' || echo 'Translations are ok'; rm /tmp/i18n-check-$$.json",
    "_i18n-auto": "scripts/auto-translate.js src/locales/*/translation.json",
    "_run-web": "heroku ps:scale web=1 --app acme",
    "_stop-web": "heroku ps:scale web=0 --app acme",
    "_logs": "heroku logs --tail",
    "_logspt": "heroku addons:open --app acme papertrail",
    "analyze-dependencies": "npx depcheck --ignore-patterns tmp/",
    "list-deadfiles": "npx deadfile ./server.js --dir src/",
    "find-problems": "npx eslint server.js src/",
    "_docker-build-args": "$(for i in $(grep -vE '^#|^$' .env); do out+=\"--build-arg $i \"; done; echo $out; out=\"\")",
    "docker-build-dev": "rm -f client/build/index-injected.html; export NODE_ENV=$(grep NODE_ENV .env.dev | cut -d '=' -f2) PORT=$(grep PORT .env.dev | cut -d '=' -f2); docker build -t acmeserver:latest .",
    "docker-run-dev": "PORT=$(grep PORT .env.dev | cut -d '=' -f2); docker run -p ${PORT}:${PORT} --env-file .env.dev acmeserver",
    "docker-build": "rm -f client/build/index-injected.html; export NODE_ENV=$(grep NODE_ENV .env | cut -d '=' -f2) PORT=$(grep PORT .env | cut -d '=' -f2); docker build -t acmeserver:latest .",
    "docker-run": "PORT=$(grep PORT .env | cut -d '=' -f2); docker run -p ${PORT}:${PORT} --env-file .env acmeserver",
    "fly-import-secrets": "cat .env | fly secrets import",
    "fly-deploy": "fly deploy",
    "fly-logs": "fly logs",
    "detect-secrets-scan": "detect-secrets scan --exclude-files client --exclude-files test/ --exclude-files logs --exclude-files .yarn --exclude-secrets 'cat .env | fly secrets import' --exclude-secrets '(Wrong password|Mauvais mot de passe|Password errata)' > .detect-secrets.baseline",
    "detect-secrets-audit": "detect-secrets audit .detect-secrets.baseline"
  },
  "keywords": [
    "node.js",
    "express",
    "jwt",
    "refresh token",
    "authentication",
    "authorization",
    "mongodb"
  ],
  "dependencies": {
    "bcryptjs": "^2.4.3",
    "cheerio": "1.0.0",
    "codice-fiscale-js": "^2.3.18",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.0.1",
    "ejs": "^3.1.10",
    "email-validator": "^2.0.4",
    "express": "^4.17.1",
    "i18next": "^22.4.14",
    "i18next-fs-backend": "^2.3.2",
    "i18next-http-middleware": "^3.2.2",
    "jsonwebtoken": "^8.5.1",
    "mongoose": "^5.13.15",
    "morgan": "^1.10.0",
    "sib-api-v3-sdk": "^8.5.0",
    "stripe": "^8.214.0",
    "winston": "^3.7.2",
    "winston-syslog": "^2.5.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.0",
    "@flydotio/dockerfile": "latest",
    "chai": "^4.3.6",
    "chai-http": "^4.3.0",
    "chai-spies": "^1.0.0",
    "eslint": "^9.9.0",
    "globals": "^15.9.0",
    "i18next-parser": "9.0.2",
    "mocha": "^9.2.2",
    "nodemon": "^2.0.15",
    "nyc": "^15.1.0"
  },
  "packageManager": "yarn@3.6.1",
  "dependenciesMetadata": {
    "unplugged": []
  }
}
